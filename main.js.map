{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../shared/IncomingMessage.ts","webpack:///./src/audio.ts","webpack:///./src/ui.ts","webpack:///./src/websocket.ts","webpack:///./src/debug.ts","webpack:///./src/index.ts","webpack:///../shared/OutgoingMessage.ts","webpack:///./src/webrtc.ts","webpack:///./node_modules/freeice/index.js","webpack:///./node_modules/normalice/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","IncomingMessageType","navigator","mediaDevices","getUserMedia","audio","stream","document","createElement","srcObject","body","appendChild","play","console","log","$","id","found","querySelector","innerHTML","created","substr","makeButton","text","onClick","btn","onclick","parent","button","message","users","user","el","socket","messageListener","init","WebSocket","logAllEvents","onerror","warn","reconnect","onclose","onmessage","setTimeout","listener","x","JSON","parse","data","send","stringify","target","prefix","result","push","keys","getPrototypeOf","list","Array","from","Set","uniq","getAllProps","filter","startsWith","map","e","debug","initCall","captureAudio","getTracks","forEach","addTrack","connectToUser","onMessage","type","OutgoingMessageType","HANDSHAKE","sessionStorage","getItem","prompt","setItem","renderUsername","renderMessage","LOGIN","login","LOGIN_RESULT","success","error","renderUsers","handleLoginResult","USER_CONNECTED","USER_DISCONNECTED","RECEIVE_OFFER","onOffer","offer","RECEIVE_ANSWER","answer","onAnswer","onConnectionReady","RECEIVE_CANDIDATE","onCandidate","candidate","connection","RTCPeerConnection","iceServers","freeice","connectedTo","dataChannel","createDataChannel","createOffer","offerToReceiveAudio","setLocalDescription","SEND_OFFER","to","localDescription","setRemoteDescription","RTCSessionDescription","createAnswer","SEND_ANSWER","addIceCandidate","RTCIceCandidate","track","onicecandidate","SEND_CANDIDATE","ondatachannel","event","receiveChannel","channel","onopen","ontrack","renderCTA","playAudio","streams","normalice","opts","selected","servers","stun","turn","turnCount","getServers","count","idx","out","input","concat","length","Math","random","splice","url","String","stunCount","protocols","protocol","parts","output","trim","indexOf","slice","split","username","credential","urls"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","export enum IncomingMessageType {\n  ERROR = 'ERROR',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  SEND_OFFER = 'SEND_OFFER',\n  SEND_ANSWER = 'SEND_ANSWER',\n  SEND_CANDIDATE = 'SEND_CANDIDATE',\n}\n\ninterface IncomingMessage_Base {\n  type: IncomingMessageType;\n}\n\ninterface IncomingMessage_ERROR extends IncomingMessage_Base {\n  type: IncomingMessageType.ERROR;\n  message: string;\n}\n\ninterface IncomingMessage_LOGIN extends IncomingMessage_Base {\n  type: IncomingMessageType.LOGIN;\n  name: string;\n}\n\ninterface IncomingMessage_LOGOUT extends IncomingMessage_Base {\n  type: IncomingMessageType.LOGOUT;\n}\n\ninterface IncomingMessage_SEND_OFFER extends IncomingMessage_Base {\n  type: IncomingMessageType.SEND_OFFER;\n  to: string;\n  offer: RTCSessionDescription;\n}\n\ninterface IncomingMessage_SEND_ANSWER extends IncomingMessage_Base {\n  type: IncomingMessageType.SEND_ANSWER;\n  to: string;\n  answer: RTCSessionDescription;\n}\n\ninterface IncomingMessage_SEND_CANDIDATE extends IncomingMessage_Base {\n  type: IncomingMessageType.SEND_CANDIDATE;\n  to: string;\n  candidate: RTCIceCandidate;\n}\n\nexport type IncomingMessage =\n  | IncomingMessage_ERROR\n  | IncomingMessage_LOGIN\n  | IncomingMessage_LOGOUT\n  | IncomingMessage_SEND_OFFER\n  | IncomingMessage_SEND_ANSWER\n  | IncomingMessage_SEND_CANDIDATE;\n","export function captureAudio() {\n  return navigator.mediaDevices.getUserMedia({ audio: true });\n}\n\nexport async function playAudio(stream: MediaStream) {\n  const audio = prepareAudio(stream);\n  await audio.play();\n  console.log('playing');\n}\n\nfunction prepareAudio(stream: MediaStream) {\n  const audio = document.createElement('audio');\n  audio.srcObject = stream;\n  document.body.appendChild(audio);\n  return audio;\n}\n","import { SerializedUser } from '../../shared/SerializedUser';\n\nexport function renderUsername(name: string) {\n  const parent = $('#username');\n  parent.innerHTML = `<h1>${name}</h1>`;\n}\n\nexport function renderCTA(text: string, onClick: Function) {\n  const parent = $('#cta');\n  const button = makeButton(text, () => {\n    parent.innerHTML = '';\n    onClick();\n  });\n\n  parent.appendChild(document.createElement('hr'));\n  parent.appendChild(button);\n}\n\nexport function renderMessage(message: string) {\n  const parent = $('#message');\n  parent.innerHTML = message;\n}\n\nexport function renderUsers(users: SerializedUser[], onClick: Function) {\n  const parent = $('#userlist');\n\n  for (const user of users) {\n    const el = document.createElement('div');\n    el.appendChild(makeButton(user.name, () => onClick(user)));\n    parent.appendChild(el);\n  }\n}\n\nfunction $(id: string) {\n  const found = document.querySelector(id);\n\n  if (found) {\n    found.innerHTML = '';\n    // Array.from(found.children).forEach(x => x.remove());\n    return found;\n  }\n\n  const created = document.createElement('div');\n  created.id = id.substr(1);\n  document.body.appendChild(created);\n  return created;\n}\n\nfunction makeButton(text: string, onClick: (e: Event) => void) {\n  const btn = document.createElement('button');\n  btn.innerHTML = text;\n  btn.onclick = onClick as any;\n  return btn;\n}\n","import { IncomingMessage } from '../../shared/IncomingMessage';\nimport { OutgoingMessage } from '../../shared/OutgoingMessage';\nimport { logAllEvents } from './debug';\n\nlet socket: WebSocket;\nlet messageListener: (this: WebSocket, ev: MessageEvent) => void;\n\ninit();\n\nfunction init() {\n  socket = new WebSocket('wss://amongus.amatiasq.com');\n\n  logAllEvents(socket, 'WebSocket');\n\n  socket.onerror = () => {\n    console.warn('Socket closed. Retrying...');\n    reconnect();\n  };\n\n  socket.onclose = () => {\n    console.warn('Socket closed. Retrying...');\n    reconnect();\n  };\n\n  if (messageListener) {\n    socket.onmessage = messageListener;\n  }\n}\n\nfunction reconnect() {\n  setTimeout(() => {\n    console.log('Reconnecting...');\n    init();\n  }, 1000);\n}\n\nexport function onMessage(listener: (data: OutgoingMessage) => void) {\n  messageListener = socket.onmessage = x => listener(JSON.parse(x.data));\n}\n\nexport function send(value: IncomingMessage) {\n  socket.send(JSON.stringify(value));\n}\n","export function logAllEvents(target: any, prefix: string) {\n  getAllProps(target)\n    .filter(x => x.startsWith('on'))\n    .map(\n      x => (target[x] = (e: any) => console.debug(`${prefix} event \"${x}\"`, e)),\n    );\n}\n\nfunction getAllProps(value: any) {\n  let result = [];\n  let target = value;\n\n  while (target) {\n    result.push(...Object.keys(target));\n    target = Object.getPrototypeOf(target);\n  }\n\n  return uniq(result);\n}\n\nfunction uniq<T>(list: T[]) {\n  return Array.from(new Set(list));\n}\n\n// function cloneEvent(obj: any) {\n//   return {\n//     ...clone(obj),\n//     target: obj.target && clone(obj.target),\n//   };\n// }\n\n// function clone(obj: any) {\n//   return (\n//     getAllProps(obj)\n//       .filter(x => typeof obj[x] !== 'function')\n//       // @ts-ignore\n//       .reduce((r, x) => ((r[x] = obj[x]), r), {})\n//   );\n// }\n","import { IncomingMessageType } from '../../shared/IncomingMessage';\nimport {\n  OutgoingMessage,\n  OutgoingMessageType,\n} from '../../shared/OutgoingMessage';\nimport { SerializedUser } from '../../shared/SerializedUser';\nimport { captureAudio } from './audio';\nimport { renderUsername, renderUsers, renderMessage } from './ui';\nimport {\n  addTrack,\n  connectToUser,\n  onAnswer,\n  onCandidate,\n  onOffer,\n} from './webrtc';\nimport { onMessage, send } from './websocket';\n\nlet users: SerializedUser[] = [];\n\nonMessage(data => {\n  switch (data.type) {\n    case OutgoingMessageType.HANDSHAKE:\n      return login();\n    case OutgoingMessageType.LOGIN_RESULT:\n      return handleLoginResult(data);\n    case OutgoingMessageType.USER_CONNECTED:\n      return userConnected(data.user);\n    case OutgoingMessageType.USER_DISCONNECTED:\n      return userDisconnected(data.user);\n    case OutgoingMessageType.RECEIVE_OFFER:\n      return onOffer(data.from, data.offer);\n    case OutgoingMessageType.RECEIVE_ANSWER:\n      return onConnectionReady(data.from, data.answer);\n    case OutgoingMessageType.RECEIVE_CANDIDATE:\n      return onCandidate(data.from, data.candidate);\n    default:\n      console.log(`Unhandled message: ${data.type}`);\n  }\n});\n\nfunction login() {\n  let name = sessionStorage.getItem('amongus:username');\n  while (!name) name = prompt('Username');\n  sessionStorage.setItem('amongus:username', name);\n  renderUsername(name);\n  renderMessage('');\n\n  send({\n    type: IncomingMessageType.LOGIN,\n    name,\n  });\n}\n\nfunction handleLoginResult(data: OutgoingMessage) {\n  if (data.type !== OutgoingMessageType.LOGIN_RESULT) {\n    return;\n  }\n\n  if (!data.success) {\n    return console.error(`LOGIN FAILED: ${data.message}`);\n  }\n\n  users = data.users;\n  renderUsers(users, initCall);\n}\n\nfunction userConnected(user: SerializedUser) {\n  console.log('CONNECTED', user);\n  users.push(user);\n  renderUsers(users, initCall);\n}\n\nfunction userDisconnected(user: SerializedUser) {\n  console.log('DISCONNECTED', user);\n  users = users.filter(x => x.id !== user.id);\n  renderUsers(users, initCall);\n}\n\nasync function initCall(user: SerializedUser) {\n  const stream = await captureAudio();\n  console.log('sending audio');\n  stream.getTracks().forEach(x => addTrack(x, stream));\n  await connectToUser(user);\n}\n\nasync function onConnectionReady(from: string, answer: RTCSessionDescription) {\n  await onAnswer(from, answer);\n}\n","import { SerializedUser } from './SerializedUser';\n\nexport enum OutgoingMessageType {\n  ERROR = 'ERROR',\n  HANDSHAKE = 'HANDSHAKE',\n  LOGIN_RESULT = 'LOGIN_RESULT',\n  USER_CONNECTED = 'USER_CONNECTED',\n  USER_DISCONNECTED = 'USER_DISCONNECTED',\n  RECEIVE_OFFER = 'RECEIVE_OFFER',\n  RECEIVE_ANSWER = 'RECEIVE_ANSWER',\n  RECEIVE_CANDIDATE = 'RECEIVE_CANDIDATE',\n}\n\ninterface OutgoingMessage_Base {\n  type: OutgoingMessageType;\n}\n\ninterface OutgoingMessage_ERROR extends OutgoingMessage_Base {\n  type: OutgoingMessageType.ERROR;\n  message: string;\n}\n\ninterface OutgoingMessage_HANDSHAKE extends OutgoingMessage_Base {\n  type: OutgoingMessageType.HANDSHAKE;\n  message: string;\n}\n\ninterface OutgoingMessage_LOGIN_RESULT_SUCCESS extends OutgoingMessage_Base {\n  type: OutgoingMessageType.LOGIN_RESULT;\n  success: true;\n  users: SerializedUser[];\n}\n\ninterface OutgoingMessage_LOGIN_RESULT_FAIL extends OutgoingMessage_Base {\n  type: OutgoingMessageType.LOGIN_RESULT;\n  success: false;\n  message: string;\n}\n\ninterface OutgoingMessage_USER_CONNECTED extends OutgoingMessage_Base {\n  type: OutgoingMessageType.USER_CONNECTED;\n  user: SerializedUser;\n}\n\ninterface OutgoingMessage_USER_DISCONNECTED extends OutgoingMessage_Base {\n  type: OutgoingMessageType.USER_DISCONNECTED;\n  user: SerializedUser;\n}\n\ninterface OutgoingMessage_RECEIVE_OFFER extends OutgoingMessage_Base {\n  type: OutgoingMessageType.RECEIVE_OFFER;\n  from: string;\n  offer: RTCSessionDescription;\n}\n\ninterface OutgoingMessage_RECEIVE_ANSWER extends OutgoingMessage_Base {\n  type: OutgoingMessageType.RECEIVE_ANSWER;\n  from: string;\n  answer: RTCSessionDescription;\n}\n\ninterface OutgoingMessage_RECEIVE_CANDIDATE extends OutgoingMessage_Base {\n  type: OutgoingMessageType.RECEIVE_CANDIDATE;\n  from: string;\n  candidate: RTCIceCandidate;\n}\n\nexport type OutgoingMessage =\n  | OutgoingMessage_ERROR\n  | OutgoingMessage_HANDSHAKE\n  | OutgoingMessage_LOGIN_RESULT_SUCCESS\n  | OutgoingMessage_LOGIN_RESULT_FAIL\n  | OutgoingMessage_USER_CONNECTED\n  | OutgoingMessage_USER_DISCONNECTED\n  | OutgoingMessage_RECEIVE_OFFER\n  | OutgoingMessage_RECEIVE_ANSWER\n  | OutgoingMessage_RECEIVE_CANDIDATE;\n","/// <reference path=\"./declare.d.ts\" />\n\n// import * as iceServers from './webrtc.servers.json';\nimport freeice = require('freeice');\n\nimport { IncomingMessageType } from '../../shared/IncomingMessage';\nimport { SerializedUser } from '../../shared/SerializedUser';\nimport { playAudio } from './audio';\nimport { send } from './websocket';\nimport { renderCTA } from './ui';\nimport { logAllEvents } from './debug';\n\nconst connection = new RTCPeerConnection({\n  iceServers: freeice(),\n} as any);\n\nlet connectedTo: string | null = null;\n\nexport async function connectToUser(user: SerializedUser) {\n  const dataChannel = connection.createDataChannel('messenger');\n  dataChannel.onerror = error =>\n    console.error('Error connecting to user', error);\n\n  dataChannel.onmessage = onMessage;\n  connectedTo = user.name;\n\n  const offer = await connection.createOffer({ offerToReceiveAudio: true });\n  await connection.setLocalDescription(offer);\n\n  await send({\n    type: IncomingMessageType.SEND_OFFER,\n    to: user.name,\n    offer: connection.localDescription!,\n  });\n\n  function onMessage({ data }: MessageEvent) {\n    console.log('POLLAS', data);\n  }\n}\n\nexport async function onOffer(from: string, offer: RTCSessionDescription) {\n  await connection.setRemoteDescription(new RTCSessionDescription(offer));\n  const answer = await connection.createAnswer({ offerToReceiveAudio: true });\n  await connection.setLocalDescription(answer);\n  await send({\n    type: IncomingMessageType.SEND_ANSWER,\n    to: from,\n    answer: connection.localDescription!,\n  });\n}\n\nexport function onAnswer(from: string, answer: RTCSessionDescription) {\n  return connection.setRemoteDescription(new RTCSessionDescription(answer));\n}\n\nexport function onCandidate(from: string, candidate: RTCIceCandidate) {\n  connection.addIceCandidate(new RTCIceCandidate(candidate));\n}\n\nexport function addTrack(track: MediaStreamTrack, stream: MediaStream) {\n  connection.addTrack(track, stream);\n}\n\nlogAllEvents(connection, 'WebRTC');\n\n// connection.onconnectionstatechange = () =>\n//   console.log('connection state', connection.connectionState);\n\nconnection.onicecandidate = ({ candidate }) => {\n  console.log('Candidate ready');\n  if (candidate && connectedTo) {\n    send({\n      type: IncomingMessageType.SEND_CANDIDATE,\n      to: connectedTo,\n      candidate,\n    });\n  }\n};\n\nconnection.ondatachannel = event => {\n  let receiveChannel = event.channel;\n  receiveChannel.onmessage = onMessage;\n  receiveChannel.onopen = () => {\n    console.log('Data channel is open and ready to be used.');\n  };\n\n  function onMessage({ data }: MessageEvent) {\n    console.log('POLLAS2', data);\n  }\n};\n\nconnection.ontrack = (e: RTCTrackEvent) => {\n  console.log('got track');\n  renderCTA('Someone is calling you... ANSWER', () => playAudio(e.streams[0]));\n};\n","/* jshint node: true */\n'use strict';\n\nvar normalice = require('normalice');\n\n/**\n  # freeice\n\n  The `freeice` module is a simple way of getting random STUN or TURN server\n  for your WebRTC application.  The list of servers (just STUN at this stage)\n  were sourced from this [gist](https://gist.github.com/zziuni/3741933).\n\n  ## Example Use\n\n  The following demonstrates how you can use `freeice` with\n  [rtc-quickconnect](https://github.com/rtc-io/rtc-quickconnect):\n\n  <<< examples/quickconnect.js\n\n  As the `freeice` module generates ice servers in a list compliant with the\n  WebRTC spec you will be able to use it with raw `RTCPeerConnection`\n  constructors and other WebRTC libraries.\n\n  ## Hey, don't use my STUN/TURN server!\n\n  If for some reason your free STUN or TURN server ends up in the\n  list of servers ([stun](https://github.com/DamonOehlman/freeice/blob/master/stun.json) or\n  [turn](https://github.com/DamonOehlman/freeice/blob/master/turn.json))\n  that is used in this module, you can feel\n  free to open an issue on this repository and those servers will be removed\n  within 24 hours (or sooner).  This is the quickest and probably the most\n  polite way to have something removed (and provides us some visibility\n  if someone opens a pull request requesting that a server is added).\n\n  ## Please add my server!\n\n  If you have a server that you wish to add to the list, that's awesome! I'm\n  sure I speak on behalf of a whole pile of WebRTC developers who say thanks.\n  To get it into the list, feel free to either open a pull request or if you\n  find that process a bit daunting then just create an issue requesting\n  the addition of the server (make sure you provide all the details, and if\n  you have a Terms of Service then including that in the PR/issue would be\n  awesome).\n\n  ## I know of a free server, can I add it?\n\n  Sure, if you do your homework and make sure it is ok to use (I'm currently\n  in the process of reviewing the terms of those STUN servers included from\n  the original list).  If it's ok to go, then please see the previous entry\n  for how to add it.\n\n  ## Current List of Servers\n\n  * current as at the time of last `README.md` file generation\n\n  ### STUN\n\n  <<< stun.json\n\n  ### TURN\n\n  <<< turn.json\n\n**/\n\nvar freeice = function(opts) {\n  // if a list of servers has been provided, then use it instead of defaults\n  var servers = {\n    stun: (opts || {}).stun || require('./stun.json'),\n    turn: (opts || {}).turn || require('./turn.json')\n  };\n\n  var stunCount = (opts || {}).stunCount || 2;\n  var turnCount = (opts || {}).turnCount || 0;\n  var selected;\n\n  function getServers(type, count) {\n    var out = [];\n    var input = [].concat(servers[type]);\n    var idx;\n\n    while (input.length && out.length < count) {\n      idx = (Math.random() * input.length) | 0;\n      out = out.concat(input.splice(idx, 1));\n    }\n\n    return out.map(function(url) {\n        //If it's a not a string, don't try to \"normalice\" it otherwise using type:url will screw it up\n        if ((typeof url !== 'string') && (! (url instanceof String))) {\n            return url;\n        } else {\n            return normalice(type + ':' + url);\n        }\n    });\n  }\n\n  // add stun servers\n  selected = [].concat(getServers('stun', stunCount));\n\n  if (turnCount) {\n    selected = selected.concat(getServers('turn', turnCount));\n  }\n\n  return selected;\n};\n\nmodule.exports = freeice;","/**\n  # normalice\n\n  Normalize an ice server configuration object (or plain old string) into a format\n  that is usable in all browsers supporting WebRTC.  Primarily this module is designed\n  to help with the transition of the `url` attribute of the configuration object to\n  the `urls` attribute.\n\n  ## Example Usage\n\n  <<< examples/simple.js\n\n**/\n\nvar protocols = [\n  'stun:',\n  'turn:'\n];\n\nmodule.exports = function(input) {\n  var url = (input || {}).url || input;\n  var protocol;\n  var parts;\n  var output = {};\n\n  // if we don't have a string url, then allow the input to passthrough\n  if (typeof url != 'string' && (! (url instanceof String))) {\n    return input;\n  }\n\n  // trim the url string, and convert to an array\n  url = url.trim();\n\n  // if the protocol is not known, then passthrough\n  protocol = protocols[protocols.indexOf(url.slice(0, 5))];\n  if (! protocol) {\n    return input;\n  }\n\n  // now let's attack the remaining url parts\n  url = url.slice(5);\n  parts = url.split('@');\n\n  output.username = input.username;\n  output.credential = input.credential;\n  // if we have an authentication part, then set the credentials\n  if (parts.length > 1) {\n    url = parts[1];\n    parts = parts[0].split(':');\n\n    // add the output credential and username\n    output.username = parts[0];\n    output.credential = (input || {}).credential || parts[1] || '';\n  }\n\n  output.url = protocol + url;\n  output.urls = [ output.url ];\n\n  return output;\n};\n"],"sourceRoot":""}