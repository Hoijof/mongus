{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../shared/IncomingMessage.ts","webpack:///./src/audio.ts","webpack:///./src/websocket.ts","webpack:///./src/index.ts","webpack:///../shared/OutgoingMessage.ts","webpack:///./src/ui.ts","webpack:///./src/webrtc.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","IncomingMessageType","navigator","mediaDevices","getUserMedia","audio","stream","document","createElement","srcObject","body","appendChild","play","console","log","webSocket","WebSocket","listener","onmessage","x","JSON","parse","data","send","stringify","users","initCall","user","captureAudio","getTracks","forEach","addTrack","connectToUser","onMessage","type","OutgoingMessageType","HANDSHAKE","sessionStorage","getItem","prompt","setItem","renderUsername","LOGIN","login","LOGIN_RESULT","success","error","message","push","renderUsers","handleLoginResult","USER_CONNECTED","USER_DISCONNECTED","index","findIndex","id","splice","userDisconnected","RECEIVE_OFFER","onOffer","from","offer","RECEIVE_ANSWER","answer","onAnswer","onConnectionReady","RECEIVE_CANDIDATE","onCandidate","candidate","$","found","querySelector","innerHTML","created","substr","onClick","parent","el","btn","onclick","connection","RTCPeerConnection","iceServers","urls","connectedTo","dataChannel","createDataChannel","onerror","createOffer","offerToReceiveAudio","setLocalDescription","SEND_OFFER","to","localDescription","setRemoteDescription","RTCSessionDescription","createAnswer","SEND_ANSWER","addIceCandidate","RTCIceCandidate","track","onconnectionstatechange","connectionState","onicecandidate","SEND_CANDIDATE","ondatachannel","event","receiveChannel","channel","onopen","ontrack","e","playAudio","streams"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export enum IncomingMessageType {\n  ERROR = 'ERROR',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  SEND_OFFER = 'SEND_OFFER',\n  SEND_ANSWER = 'SEND_ANSWER',\n  SEND_CANDIDATE = 'SEND_CANDIDATE',\n}\n\ninterface IncomingMessage_Base {\n  type: IncomingMessageType;\n}\n\ninterface IncomingMessage_ERROR extends IncomingMessage_Base {\n  type: IncomingMessageType.ERROR;\n  message: string;\n}\n\ninterface IncomingMessage_LOGIN extends IncomingMessage_Base {\n  type: IncomingMessageType.LOGIN;\n  name: string;\n}\n\ninterface IncomingMessage_LOGOUT extends IncomingMessage_Base {\n  type: IncomingMessageType.LOGOUT;\n}\n\ninterface IncomingMessage_SEND_OFFER extends IncomingMessage_Base {\n  type: IncomingMessageType.SEND_OFFER;\n  to: string;\n  offer: RTCSessionDescription;\n}\n\ninterface IncomingMessage_SEND_ANSWER extends IncomingMessage_Base {\n  type: IncomingMessageType.SEND_ANSWER;\n  to: string;\n  answer: RTCSessionDescription;\n}\n\ninterface IncomingMessage_SEND_CANDIDATE extends IncomingMessage_Base {\n  type: IncomingMessageType.SEND_CANDIDATE;\n  to: string;\n  candidate: RTCIceCandidate;\n}\n\nexport type IncomingMessage =\n  | IncomingMessage_ERROR\n  | IncomingMessage_LOGIN\n  | IncomingMessage_LOGOUT\n  | IncomingMessage_SEND_OFFER\n  | IncomingMessage_SEND_ANSWER\n  | IncomingMessage_SEND_CANDIDATE;\n","export function captureAudio() {\n  return navigator.mediaDevices.getUserMedia({ audio: true });\n}\n\nexport async function playAudio(stream: MediaStream) {\n  const audio = prepareAudio(stream);\n  await audio.play();\n  console.log('playing');\n}\n\nfunction prepareAudio(stream: MediaStream) {\n  const audio = document.createElement('audio');\n  audio.srcObject = stream;\n  document.body.appendChild(audio);\n  return audio;\n}\n","import { IncomingMessage } from '../../shared/IncomingMessage';\nimport { OutgoingMessage } from '../../shared/OutgoingMessage';\n\nconst webSocket = new WebSocket('wss://amongus.amatiasq.com');\n\nexport function onMessage(listener: (data: OutgoingMessage) => void) {\n  webSocket.onmessage = x => listener(JSON.parse(x.data));\n}\n\nexport function send(value: IncomingMessage) {\n  webSocket.send(JSON.stringify(value));\n}\n","import { IncomingMessageType } from '../../shared/IncomingMessage';\nimport {\n  OutgoingMessage,\n  OutgoingMessageType,\n} from '../../shared/OutgoingMessage';\nimport { SerializedUser } from '../../shared/SerializedUser';\nimport { captureAudio } from './audio';\nimport { renderUsername, renderUsers } from './ui';\nimport {\n  addTrack,\n  connectToUser,\n  onAnswer,\n  onCandidate,\n  onOffer,\n} from './webrtc';\nimport { onMessage, send } from './websocket';\n\n// captureAudio().then(playAudio);\n\nconst users: SerializedUser[] = [];\n\nonMessage(data => {\n  // console.log(data.type);\n  switch (data.type) {\n    case OutgoingMessageType.HANDSHAKE:\n      return login();\n    case OutgoingMessageType.LOGIN_RESULT:\n      return handleLoginResult(data);\n    case OutgoingMessageType.USER_CONNECTED:\n      return userConnected(data.user);\n    case OutgoingMessageType.USER_DISCONNECTED:\n      return userDisconnected(data.user);\n    case OutgoingMessageType.RECEIVE_OFFER:\n      return onOffer(data.from, data.offer);\n    case OutgoingMessageType.RECEIVE_ANSWER:\n      return onConnectionReady(data.from, data.answer);\n    case OutgoingMessageType.RECEIVE_CANDIDATE:\n      return onCandidate(data.from, data.candidate);\n    default:\n      console.log(`Unhandled message: ${data.type}`);\n  }\n});\n\nfunction login() {\n  let name = sessionStorage.getItem('amongus:username');\n  while (!name) name = prompt('Username');\n  sessionStorage.setItem('amongus:username', name);\n  renderUsername(name);\n\n  send({\n    type: IncomingMessageType.LOGIN,\n    name,\n  });\n}\n\nfunction handleLoginResult(data: OutgoingMessage) {\n  if (data.type !== OutgoingMessageType.LOGIN_RESULT) {\n    return;\n  }\n\n  if (!data.success) {\n    return console.error(`LOGIN FAILED: ${data.message}`);\n  }\n\n  users.push(...data.users);\n  renderUsers(users, initCall);\n}\n\nfunction userConnected(user: SerializedUser) {\n  console.log('CONNECTED', user);\n  users.push(user);\n  renderUsers(users, initCall);\n}\n\nfunction userDisconnected(user: SerializedUser) {\n  console.log('DISCONNECTED', user);\n  const index = users.findIndex(x => x.id === user.id);\n  if (index === -1) return;\n  users.splice(index, 1);\n  renderUsers(users, initCall);\n}\n\nasync function initCall(user: SerializedUser) {\n  const stream = await captureAudio();\n  console.log('sending audio');\n  stream.getTracks().forEach(x => addTrack(x, stream));\n  await connectToUser(user);\n}\n\nasync function onConnectionReady(from: string, answer: RTCSessionDescription) {\n  await onAnswer(from, answer);\n}\n","import { SerializedUser } from './SerializedUser';\n\nexport enum OutgoingMessageType {\n  ERROR = 'ERROR',\n  HANDSHAKE = 'HANDSHAKE',\n  LOGIN_RESULT = 'LOGIN_RESULT',\n  USER_CONNECTED = 'USER_CONNECTED',\n  USER_DISCONNECTED = 'USER_DISCONNECTED',\n  RECEIVE_OFFER = 'RECEIVE_OFFER',\n  RECEIVE_ANSWER = 'RECEIVE_ANSWER',\n  RECEIVE_CANDIDATE = 'RECEIVE_CANDIDATE',\n}\n\ninterface OutgoingMessage_Base {\n  type: OutgoingMessageType;\n}\n\ninterface OutgoingMessage_ERROR extends OutgoingMessage_Base {\n  type: OutgoingMessageType.ERROR;\n  message: string;\n}\n\ninterface OutgoingMessage_HANDSHAKE extends OutgoingMessage_Base {\n  type: OutgoingMessageType.HANDSHAKE;\n  message: string;\n}\n\ninterface OutgoingMessage_LOGIN_RESULT_SUCCESS extends OutgoingMessage_Base {\n  type: OutgoingMessageType.LOGIN_RESULT;\n  success: true;\n  users: SerializedUser[];\n}\n\ninterface OutgoingMessage_LOGIN_RESULT_FAIL extends OutgoingMessage_Base {\n  type: OutgoingMessageType.LOGIN_RESULT;\n  success: false;\n  message: string;\n}\n\ninterface OutgoingMessage_USER_CONNECTED extends OutgoingMessage_Base {\n  type: OutgoingMessageType.USER_CONNECTED;\n  user: SerializedUser;\n}\n\ninterface OutgoingMessage_USER_DISCONNECTED extends OutgoingMessage_Base {\n  type: OutgoingMessageType.USER_DISCONNECTED;\n  user: SerializedUser;\n}\n\ninterface OutgoingMessage_RECEIVE_OFFER extends OutgoingMessage_Base {\n  type: OutgoingMessageType.RECEIVE_OFFER;\n  from: string;\n  offer: RTCSessionDescription;\n}\n\ninterface OutgoingMessage_RECEIVE_ANSWER extends OutgoingMessage_Base {\n  type: OutgoingMessageType.RECEIVE_ANSWER;\n  from: string;\n  answer: RTCSessionDescription;\n}\n\ninterface OutgoingMessage_RECEIVE_CANDIDATE extends OutgoingMessage_Base {\n  type: OutgoingMessageType.RECEIVE_CANDIDATE;\n  from: string;\n  candidate: RTCIceCandidate;\n}\n\nexport type OutgoingMessage =\n  | OutgoingMessage_ERROR\n  | OutgoingMessage_HANDSHAKE\n  | OutgoingMessage_LOGIN_RESULT_SUCCESS\n  | OutgoingMessage_LOGIN_RESULT_FAIL\n  | OutgoingMessage_USER_CONNECTED\n  | OutgoingMessage_USER_DISCONNECTED\n  | OutgoingMessage_RECEIVE_OFFER\n  | OutgoingMessage_RECEIVE_ANSWER\n  | OutgoingMessage_RECEIVE_CANDIDATE;\n","import { SerializedUser } from '../../shared/SerializedUser';\n\nexport function renderUsername(name: string) {\n  const parent = $('#username');\n  parent.innerHTML = `<h1>${name}</h1>`;\n}\n\nexport function renderUsers(users: SerializedUser[], onClick: Function) {\n  const parent = $('#userlist');\n\n  for (const user of users) {\n    const el = document.createElement('div');\n    const btn = document.createElement('button');\n\n    btn.innerHTML = user.name;\n    btn.onclick = () => onClick(user);\n\n    el.appendChild(btn);\n    parent.appendChild(el);\n  }\n}\n\nfunction $(id: string) {\n  const found = document.querySelector(id);\n\n  if (found) {\n    found.innerHTML = '';\n    // Array.from(found.children).forEach(x => x.remove());\n    return found;\n  }\n\n  const created = document.createElement('div');\n  created.id = id.substr(1);\n  document.body.appendChild(created);\n  return created;\n}\n","import { IncomingMessageType } from '../../shared/IncomingMessage';\nimport { SerializedUser } from '../../shared/SerializedUser';\nimport { playAudio } from './audio';\nimport { send } from './websocket';\n\nconst connection = new RTCPeerConnection({\n  iceServers: [{ urls: 'stun:stun.1.google.com:19302' }],\n} as any);\n\nlet connectedTo: string | null = null;\n\nexport async function connectToUser(user: SerializedUser) {\n  const dataChannel = connection.createDataChannel('messenger');\n  dataChannel.onerror = error =>\n    console.error('Error connecting to user', error);\n\n  dataChannel.onmessage = onMessage;\n  connectedTo = user.name;\n\n  const offer = await connection.createOffer({ offerToReceiveAudio: true });\n  await connection.setLocalDescription(offer);\n\n  await send({\n    type: IncomingMessageType.SEND_OFFER,\n    to: user.name,\n    offer: connection.localDescription!,\n  });\n\n  function onMessage({ data }: MessageEvent) {\n    console.log('POLLAS', data);\n    // }\n  }\n}\n\nexport async function onOffer(from: string, offer: RTCSessionDescription) {\n  await connection.setRemoteDescription(new RTCSessionDescription(offer));\n  const answer = await connection.createAnswer({ offerToReceiveAudio: true });\n  await connection.setLocalDescription(answer);\n  await send({\n    type: IncomingMessageType.SEND_ANSWER,\n    to: from,\n    answer: connection.localDescription!,\n  });\n}\n\nexport function onAnswer(from: string, answer: RTCSessionDescription) {\n  return connection.setRemoteDescription(new RTCSessionDescription(answer));\n}\n\nexport function onCandidate(from: string, candidate: RTCIceCandidate) {\n  connection.addIceCandidate(new RTCIceCandidate(candidate));\n}\n\nexport function addTrack(track: MediaStreamTrack, stream: MediaStream) {\n  connection.addTrack(track, stream);\n}\n\nconnection.onconnectionstatechange = () =>\n  console.log('connection state', connection.connectionState);\n\n// //when the browser finds an ice candidate we send it to another peer\nconnection.onicecandidate = ({ candidate }) => {\n  console.log('Candidate ready');\n  if (candidate && connectedTo) {\n    send({\n      type: IncomingMessageType.SEND_CANDIDATE,\n      to: connectedTo,\n      candidate,\n    });\n  }\n};\n\nconnection.ondatachannel = event => {\n  let receiveChannel = event.channel;\n  receiveChannel.onopen = () => {\n    console.log('Data channel is open and ready to be used.');\n  };\n  receiveChannel.onmessage = onMessage;\n  function onMessage({ data }: MessageEvent) {\n    console.log('POLLAS2', data);\n  }\n};\n\nconnection.ontrack = (e: RTCTrackEvent) => {\n  console.log('got track');\n  playAudio(e.streams[0]);\n};\n"],"sourceRoot":""}