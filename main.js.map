{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ui.ts","webpack:///./src/users.ts","webpack:///../shared/communication/ClientMessage.ts","webpack:///../shared/communication/ClientToClientMessage.ts","webpack:///./src/audio.ts","webpack:///./src/User.ts","webpack:///./node_modules/@amatiasq/emitter/emitter.js","webpack:///./src/index.ts","webpack:///../shared/communication/RoomMessage.ts","webpack:///../shared/communication/ServerMessage.ts","webpack:///./src/game.ts","webpack:///./src/canvas.ts","webpack:///./src/interaction.ts","webpack:///./src/PeerChannel.ts","webpack:///./node_modules/@amatiasq/peer-connection/PeerConnection.js","webpack:///./node_modules/freeice/index.js","webpack:///./node_modules/normalice/index.js","webpack:///./src/Socket.ts","webpack:///./node_modules/@amatiasq/json-socket/JsonSocket.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","onUserClicked","$","selector","document","querySelector","userList","listener","canvas","parent","parentElement","window","addEventListener","fill","width","clientWidth","height","clientHeight","stored","sessionStorage","getItem","e","removeItem","location","reload","Promise","resolve","$dialog","$form","$input","showModal","reject","trim","setItem","innerHTML","question","$template","importNode","content","firstElementChild","body","appendChild","then","result","remove","renderUsers","users","user","el","createElement","suffix","isCalling","button","onclick","getUserById","id","find","x","unserializeUser","User","refreshUserList","list","map","console","log","push","filter","ClientMessageType","ClientToClientMessageType","navigator","mediaDevices","getUserMedia","audio","stream","srcObject","prepareAudio","play","serialized","position","y","connection","this","Boolean","callStarted","acceptAnswer","answer","hangup","end","dispose","emitter","listeners","Set","subscribe","emit","data","forEach","add","delete","ServerMessageType","socket","Socket","getValidUser","send","type","ERROR","message","whenUserClicked","conn","PeerChannel","captureAudio","getTracks","addTrack","sendOffer","callUser","onMessage","HANDSHAKE","getUserName","renderUsername","LOGIN","LOGIN_RESULT","success","alert","clear","setUserList","me","frame","before","runFrame","SEND_TO_ROOM","RoomMessageType","POSITION_CHANGED","requestAnimationFrame","startGame","handleLoginResult","USER_CONNECTED","userConnected","USER_DISCONNECTED","userDisconnected","MESSAGE_TO_ROOM","from","updatePosition","MESSAGE_FROM_USER","RPC_OFFER","offer","confirm","acceptOffer","SEND_TO_USER","to","REJECT_OFFER","receiveOffer","RPC_ANSWER","isPressed","Action","UP","DOWN","LEFT","RIGHT","movePlayer","others","getUserList","render","getCanvas","context","getContext","drawCircle","color","fillStyle","beginPath","arc","Math","PI","closePath","fillRect","save","translate","restore","KeyboardKey","keymap","W","S","A","D","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","actions","event","action","has","createRtc","createOffer","offerToReceiveAudio","addStream","track","close","PeerConnection","onTrackReceived","playAudio","streams","__importDefault","mod","freeice_1","emitter_1","rtc","onDataChannel","options","setLocalDescription","processIceCandidates","localDescription","setRemoteDescription","createAnswer","RTCPeerConnection","iceServers","default","ontrack","ondatachannel","onicecandidate","candidate","desc","RTCSessionDescription","normalice","opts","selected","servers","stun","turn","stunCount","turnCount","getServers","count","idx","out","input","concat","length","random","splice","url","String","protocols","protocol","parts","output","indexOf","slice","split","username","credential","urls","uri","JsonSocket","Map","processMessage","set","debug","RECONNECTION_DELAY","MAX_RECONNECT_ATTEMPTS","reconnectionDelay","reconnectAttempts","isReconnecting","ws","init","WebSocket","onmessage","onerror","connectionLost","onclose","JSON","stringify","parse","error","warn","setTimeout"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,2iDC/ErD,IAIIC,EAJEC,EAAI,SAAsCC,GAC9C,OAAAC,SAASC,cAAcF,IAEnBG,EAAWJ,EAAE,aAGnB,2BAAgCK,GAC9BN,EAAgBM,GAGlB,uBACE,IAAMC,EAASN,EAAqB,UAC9BO,EAASD,EAAOE,cAKtB,OAHAC,OAAOC,iBAAiB,SAAUC,GAClCA,IAEOL,EAEP,SAASK,IACPL,EAAOM,MAAQL,EAAOM,YACtBP,EAAOQ,OAASP,EAAOQ,eAI3B,yB,iFASE,OARMzB,EAAM,mBACN0B,EAASC,eAAeC,QAAQ5B,GAEtCU,EAAE,WAAYU,iBAAiB,SAAS,SAAAS,GACtCF,eAAeG,WAAW9B,GAC1B+B,SAASC,YAGPN,EACK,CAAP,EAAOO,QAAQC,QAAQR,KAGnBS,EAAUzB,EAAqB,UAC/B0B,EAAQD,EAAQtB,cAAc,QAC9BwB,EAASD,aAAK,EAALA,EAAOvB,cAAc,oBAEpCsB,EAAQG,YAED,CAAP,EAAO,IAAIL,SAAkB,SAACC,EAASK,GACrCH,EAAMhB,iBAAiB,UAAU,SAAAS,GAC/B,IAAMnC,EAAQ2C,EAAO3C,MAAM8C,OAC3Bb,eAAec,QAAQzC,EAAKN,GAC5BwC,EAAQxC,kBAKd,0BAA+BV,GACd0B,EAAE,aACVgC,UAAY1D,GAGrB,mBAAwB2D,GACtB,IAAMC,EAAYlC,EAAuB,mBACnCyB,EAAUvB,SAASiC,WAAWD,EAAUE,SAAS,GACpDC,kBAEHnC,SAASoC,KAAKC,YAAYd,GAE1B,IAAM7C,EAAM,SAACqB,GAAqB,OAAAwB,EAAQtB,cAAcF,IAGxD,OAFArB,EAAI,aAAcoD,UAAYC,EAEvB,IAAIV,SAAQ,SAAAC,GACjB5C,EAAI,QAAS8B,iBAAiB,SAAS,WAAM,OAAAc,GAAQ,MACrD5C,EAAI,OAAQ8B,iBAAiB,SAAS,WAAM,OAAAc,GAAQ,MACpDC,EAAQG,eACPY,MAAK,SAAAC,GAEN,OADAhB,EAAQiB,SACDD,MAIX,uBAAgBE,EAAYC,GAA5B,WACExC,EAAS4B,UAAY,GAErB,I,eAAWa,GACT,IAAMC,EAAK5C,SAAS6C,cAAc,OAO5BC,EAASH,EAAKI,UAAY,gBAAkB,GAE5CC,EAAShD,SAAS6C,cAAc,UACtCG,EAAOlB,UAAea,EAAKvE,KAAI,IAAI0E,EACnCE,EAAOC,QATa,gD,kDAClB,SAAMpD,EAAc8C,I,cAApB,SACAF,EAAYC,G,YAQdE,EAAGP,YAAYW,GAEf9C,EAASmC,YAAYO,IAfJ,MAAAF,EAAA,eAAO,C,EAAX,S,oMCnFjB,WAEA,OAEIA,EAAgB,GAEpB,SAAgBQ,EAAYC,GAC1B,OAAOT,EAAMU,MAAK,SAAAC,GAAK,OAAAA,EAAEF,KAAOA,KAYlC,SAASG,EAAgBX,GACvB,OAAO,IAAI,EAAAY,KAAKZ,GAmBlB,SAAgBa,IACd,EAAAf,YAAYC,GAlCd,gBAIA,yBAA8BtE,GAC5B,OAAOsE,EAAMU,MAAK,SAAAC,GAAK,OAAAA,EAAEjF,OAASA,MAGpC,uBAA4BqF,GAC1Bf,EAAQe,EAAKC,IAAIJ,GAAiBI,KAAI,SAAAL,GAAK,OAAAH,EAAYG,EAAEF,KAAOE,KAChEG,KAOF,yBAA8Bb,GAC5BgB,QAAQC,IAAI,YAAajB,GACzBD,EAAMmB,KAAKP,EAAgBX,IAC3Ba,KAGF,4BAAiCb,GAC/BgB,QAAQC,IAAI,eAAgBjB,GAC5BD,EAAQA,EAAMoB,QAAO,SAAAT,GAAK,OAAAA,EAAEF,KAAOR,EAAKQ,MACxCK,KAGF,yBACE,OAAOd,GAGT,qB,yGCpCA,SAAYqB,GACV,gBACA,gBACA,kBACA,8BACA,8BALF,CAAY,EAAAA,oBAAA,EAAAA,kBAAiB,M,iHCJ7B,SAAYC,GACV,yBACA,2BACA,8BAHF,CAAY,EAAAA,4BAAA,EAAAA,0BAAyB,M,++CCArC,0BACE,OAAOC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,KAGtD,qBAAgCC,G,0FAE9B,SAGF,SAAsBA,GACpB,IAAMD,EAAQpE,SAAS6C,cAAc,SAGrC,OAFAuB,EAAME,UAAYD,EAClBrE,SAASoC,KAAKC,YAAY+B,GACnBA,EAROG,CAAaF,GACfG,Q,cAAZ,S,yGCHF,iBAWE,WAAYC,GARZ,KAAAC,SAAW,CAAErB,EAAG,EAAGsB,EAAG,GAEd,KAAAC,WAAiC,KAOvCC,KAAK1B,GAAKsB,EAAWtB,GACrB0B,KAAKzG,KAAOqG,EAAWrG,KAmB3B,OAzBE,sBAAI,wBAAS,C,IAAb,WACE,OAAO0G,QAAQD,KAAKD,a,gCAQtB,YAAAG,YAAA,SAAYH,GACVC,KAAKD,WAAaA,GAGpB,YAAAI,aAAA,SAAaC,GACXJ,KAAKD,WAAYI,aAAaC,IAGhC,YAAAC,OAAA,W,MACiB,QAAf,EAAAL,KAAKD,kBAAU,SAAEO,MACjBN,KAAKD,WAAa,MAGpB,YAAAQ,QAAA,WACEP,KAAKK,UAET,EAhCA,GAAa,EAAA3B,Q,6BCFbhF,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ0H,aAAU,EAalB1H,EAAQ0H,QAZR,WACI,MAAMC,EAAY,IAAIC,IAEtB,OADAC,EAAUC,KAEV,SAAcC,GACVJ,EAAUK,QAAQxF,GAAYA,EAASuF,KAFpCF,EAIP,SAASA,EAAUrF,GAEf,OADAmF,EAAUM,IAAIzF,GACP,IAAMmF,EAAUO,OAAO1F,M,irDCZtC,WAIA,OACA,OACA,OAKA,OACA,QACA,QACA,QACA,OACA,OACA,OAQMpB,EAAI,EAAA+G,kBACJC,EAAS,IAAI,EAAAC,OAAO,8BA2H1B,SAASC,EAAa9C,GACpB,IAAMR,EAAO,EAAAO,YAAYC,GAEzB,GAAIR,EACF,OAAOA,EAGToD,EAAOG,KAAK,CACVC,KAAM,EAAApC,kBAAkBqC,MACxBC,QAAS,sCAAsClD,IAlInD,EAAAmD,iBAgFA,SAAoB3D,GAClB,OAAOA,EAAKI,UAAYJ,EAAKuC,SAG/B,SAAwBvC,G,kGAEP,OADT4D,EAAO,IAAI,EAAAC,YAAY7D,GAAM,SAAA1E,GAAK,OAAA8H,EAAOG,KAAKjI,MACrC,GAAM,EAAAwI,gB,OAMrB,OANMpC,EAAS,UAERqC,YAAYf,SAAQ,SAAAtC,GAAK,OAAAkD,EAAKI,SAAStD,EAAGgB,MACjDkC,EAAKK,YAELjE,EAAKoC,YAAYwB,GACV,CAAP,EAAOA,UAXiCM,CAASlE,MA/EnDoD,EAAOe,UAAU/H,EAAEgI,WA6BnB,W,gGACe,SAAM,EAAAC,e,cAAb5I,EAAO,SACb,EAAA6I,eAAe7I,GACf2H,EAAOG,KAAK,CAAEC,KAAM,EAAApC,kBAAkBmD,MAAO9I,KAAI,I,cA/BnD2H,EAAOe,UAAU/H,EAAEoI,cAAc,SAAAzB,GAAQ,OAkCzC,SAA2BA,GACzB,GAAIA,EAAKS,OAAS,EAAAL,kBAAkBqB,aAClC,OAGF,IAAKzB,EAAK0B,QAIR,OAHAC,MAAM3B,EAAKW,SACXtF,eAAeuG,aACfnG,SAASC,SAIX,EAAAmG,YAAY7B,EAAKhD,OAInB,SAAmBtE,GACjB,IAAMoJ,EAAK,IAAI,EAAAjE,KAAK,CAAEJ,GAAI,KAAgB/E,KAAI,IAI9C,SAASqJ,IACP,IAAMC,EAAS,EAAH,GAAQF,EAAG9C,UACvB,EAAAiD,SAASH,GAELE,EAAOrE,IAAMmE,EAAG9C,SAASrB,GAAKqE,EAAO/C,IAAM6C,EAAG9C,SAASC,GACzDoB,EAAOG,KAAK,CACVC,KAAM,EAAApC,kBAAkB6D,aACxBvB,QAAS,CACPF,KAAM,EAAA0B,gBAAgBC,iBACtBpD,SAAU8C,EAAG9C,YAKnBqD,sBAAsBN,GAhBxBA,IANAO,CAAUtC,EAAKtH,MA/CwB6J,CAAkBvC,MAC3DK,EAAOe,UAAU/H,EAAEmJ,gBAAgB,SAAAxC,GAAQ,SAAAyC,cAAczC,EAAK/C,SAC9DoD,EAAOe,UAAU/H,EAAEqJ,mBAAmB,SAAA1C,GAAQ,SAAA2C,iBAAiB3C,EAAK/C,SAEpEoD,EAAOe,UAAU/H,EAAEuJ,iBAAiB,SAAC,G,IAAEC,EAAI,OAAElC,EAAO,UAC5C1D,EAAOsD,EAAasC,GAC1B,GAAK5F,EAEL,OAAQ0D,EAAQF,MACd,KAAK,EAAA0B,gBAAgBC,iBACnB,OA+DN,SAAwBnF,EAAY+B,GAClC/B,EAAK+B,SAAWA,EAhEL8D,CAAe7F,EAAM0D,EAAQ3B,cAI1CqB,EAAOe,UAAU/H,EAAE0J,mBAAmB,SAAC,G,IAAEF,EAAI,OAAElC,EAAO,UAC9C1D,EAAOsD,EAAasC,GAC1B,GAAK5F,EAEL,OAAQ0D,EAAQF,MACd,KAAK,EAAAnC,0BAA0B0E,UAC7B,OAwEN,SAA4B/F,EAAYgG,G,gGAEjB,OADrBhF,QAAQC,IAAOjB,EAAKvE,KAAI,+BACH,GAAMwK,QACtBjG,EAAKvE,KAAI,+C,OAGd,OAJqB,UAcrBuF,QAAQC,IAAI,cAAcjB,EAAKvE,KAAI,cAC7BmI,EAAO,IAAI,EAAAC,YAAY7D,GAAM,SAAA1E,GAAK,OAAA8H,EAAOG,KAAKjI,OAE/C4K,YAAYF,GACjBhF,QAAQC,IAAI,wBAAwBjB,EAAKvE,KAAI,OAE7CuE,EAAKoC,YAAYwB,GACV,CAAP,EAAOA,KAhBL5C,QAAQC,IAAI,cAAcjB,EAAKvE,KAAI,cACnC2H,EAAOG,KAAK,CACVC,KAAM,EAAApC,kBAAkB+E,aACxBC,GAAIpG,EAAKQ,GACTkD,QAAS,CAAEF,KAAM,EAAAnC,0BAA0BgF,gBAE7C,YArFSC,CAAatG,EAAM0D,EAAQsC,OACpC,KAAK,EAAA3E,0BAA0BkF,WAC7B,OAAOvG,EAAKqC,aAAaqB,EAAQpB,QACnC,KAAK,EAAAjB,0BAA0BgF,aAC7B,OAAOrG,EAAKuC,c,uGCrDlB,SAAY2C,GACV,sCADF,CAAY,EAAAA,kBAAA,EAAAA,gBAAe,M,yGCG3B,SAAY/B,GACV,gBACA,wBACA,8BACA,kCACA,wCACA,wCACA,oCAPF,CAAY,EAAAA,oBAAA,EAAAA,kBAAiB,M,gGCJ7B,YACA,QAEA,OAIA,oBAAyBnD,IAMzB,SAAoB+B,GACd,EAAAyE,UAAU,EAAAC,OAAOC,MAAK3E,EAASC,GATvB,GAUR,EAAAwE,UAAU,EAAAC,OAAOE,QAAO5E,EAASC,GAVzB,GAWR,EAAAwE,UAAU,EAAAC,OAAOG,QAAO7E,EAASrB,GAXzB,GAYR,EAAA8F,UAAU,EAAAC,OAAOI,SAAQ9E,EAASrB,GAZ1B,GAGZoG,CAAW9G,EAAK+B,UAChB,IAAMgF,EAAS,EAAAC,cAAcjG,KAAI,SAAAL,GAAK,OAAAA,EAAEqB,YACxC,EAAAkF,OAAOjH,EAAK+B,SAAUgF,K,8FCVxB,IAEMtJ,EAFN,KAEeyJ,YACTC,EAAU1J,EAAO2J,WAAW,MAYlC,SAASC,EAAW3G,EAAWsB,EAAWsF,GACxCH,EAAQI,UAAYD,EACpBH,EAAQK,YACRL,EAAQM,IAAI/G,EAAGsB,EAAG,GAAI,EAAa,EAAV0F,KAAKC,IAC9BR,EAAQrJ,OACRqJ,EAAQS,YAfV,kBAAuB5H,EAAc+G,GACnCI,EAAQU,SAAS,EAAG,EAAGpK,EAAOM,MAAON,EAAOQ,QAE5CkJ,EAAQW,OACRX,EAAQY,UAAUtK,EAAOM,MAAQ,EAAGN,EAAOQ,OAAS,GACpD8I,EAAO/D,SAAQ,SAAAhD,GAAQ,OAAAqH,EAAWrH,EAAKU,EAAGV,EAAKgC,EAAG,cAClDqF,EAAWrH,EAAKU,EAAGV,EAAKgC,EAAG,WAC3BmF,EAAQa,Y,mCCbEvB,EAOPwB,E,6EAPL,SAAYxB,GACV,eACA,mBACA,mBACA,qBAJF,CAAYA,EAAA,EAAAA,SAAA,EAAAA,OAAM,KAOlB,SAAKwB,GACH,QACA,QACA,QACA,QACA,qBACA,yBACA,yBACA,2BARF,CAAKA,MAAW,KAWhB,IAAMC,IAAM,MACTD,EAAYE,GAAI1B,EAAOC,GACxB,EAACuB,EAAYG,GAAI3B,EAAOE,KACxB,EAACsB,EAAYI,GAAI5B,EAAOG,KACxB,EAACqB,EAAYK,GAAI7B,EAAOI,MACxB,EAACoB,EAAYM,UAAW9B,EAAOC,GAC/B,EAACuB,EAAYO,YAAa/B,EAAOE,KACjC,EAACsB,EAAYQ,YAAahC,EAAOG,KACjC,EAACqB,EAAYS,aAAcjC,EAAOI,M,GAG9B8B,EAAU,IAAI/F,IAEpBvF,SAASQ,iBAAiB,WAG1B,SAAmB+K,GACjB,IAAMnM,EAAMmM,EAAMnM,IACZoM,EAASX,EAAOzL,GAER,MAAVoM,EACF7H,QAAQC,IAAI,UAAWxE,EAAKyL,EAAOzL,IAEnCkM,EAAQ1F,IAAI4F,MAThBxL,SAASQ,iBAAiB,SAa1B,SAAiB+K,GACf,IAAMnM,EAAMmM,EAAMnM,IACZoM,EAASX,EAAOzL,GAER,MAAVoM,EACF7H,QAAQC,IAAI,QAASxE,GAErBkM,EAAQzF,OAAO2F,MAInB,qBAA0BpM,GACxB,OAAOkM,EAAQG,IAAIrM,K,k+CCzDrB,YAEA,OAIA,OACA,OAEA,OAEA,aAGE,WACkBuD,EACCuD,GADD,KAAAvD,OACC,KAAAuD,OAJF,KAAAK,KAAO1B,KAAK6G,YA+D/B,OAxDQ,YAAA9E,UAAN,W,gGAEgB,SAAM/B,KAAK0B,KAAKoF,YAAY,CAAEC,qBAAqB,K,OAEjE,OAFMjD,EAAQ,SAEd,GAAM9D,KAAKqB,KAAK,CACdC,KAAM,EAAApC,kBAAkB+E,aACxBC,GAAIlE,KAAKlC,KAAKQ,GACdkD,QAAS,CACPF,KAAM,EAAAnC,0BAA0B0E,UAChCC,MAAK,M,cALT,S,YAUI,YAAAE,YAAN,SAAkBF,G,kGACD,SAAM,EAAAlC,gB,OAGN,OAHTpC,EAAS,SACfQ,KAAK0B,KAAKsF,UAAUxH,GAEL,GAAMQ,KAAK0B,KAAKsC,YAAYF,EAAO,CAChDiD,qBAAqB,K,OAGvB,OAJM3G,EAAS,SAIf,GAAMJ,KAAKqB,KAAK,CACdC,KAAM,EAAApC,kBAAkB+E,aACxBC,GAAIlE,KAAKlC,KAAKQ,GACdkD,QAAS,CACPF,KAAM,EAAAnC,0BAA0BkF,WAChCjE,OAAM,M,cALV,S,YAUF,YAAAD,aAAA,SAAaC,GACX,OAAOJ,KAAK0B,KAAKvB,aAAaC,IAGhC,YAAA0B,SAAA,SAASmF,EAAyBzH,GAEhC,OADAV,QAAQC,IAAI,oBAAoBiB,KAAKlC,KAAKvE,KAAI,KACvCyG,KAAK0B,KAAKI,SAASmF,EAAOzH,IAGnC,YAAAc,IAAA,WACEN,KAAK0B,KAAKwF,SAGJ,YAAAL,UAAR,sBACQnF,EAAO,IAAI,EAAAyF,eAQjB,OANAzF,EAAK0F,iBAAgB,SAAAhL,GACnB0C,QAAQC,IAAI,uBAAuB,EAAKjB,KAAKvE,KAAI,KACjD,EAAA8N,UAAUjL,EAAEkL,QAAQ,IACpB,EAAA3I,qBAGK+C,GAEX,EAhEA,GAAa,EAAAC,e,6BCVb,IAAI4F,EAAmBvH,MAAQA,KAAKuH,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIpN,WAAcoN,EAAM,CAAE,QAAWA,IAExD9N,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQqO,oBAAiB,EAEzB,MAAMM,EAAYF,EAAgB,EAAQ,KACpCG,EAAY,EAAQ,GAsD1B5O,EAAQqO,eArDR,MACI,cACInH,KAAK2H,IAAM3H,KAAK6G,YAChB7G,KAAKoH,gBAAkBM,EAAUlH,UACjCR,KAAK4H,cAAgBF,EAAUlH,UAEnC,kBAAkBqH,EAAU,IACxB,MAAM/D,QAAc9D,KAAK2H,IAAIb,YAAYe,GAGzC,aAFM7H,KAAK2H,IAAIG,oBAAoBhE,SAC7B9D,KAAK+H,uBACJ/H,KAAK2H,IAAIK,iBAEpB,kBAAkBlE,EAAO+D,EAAU,IAE/B,aADM7H,KAAKiI,qBAAqBnE,GACzB9D,KAAKkI,aAAaL,GAE7B,aAAazH,GACT,OAAOJ,KAAKiI,qBAAqB7H,GAErC,UAAUZ,GACNA,EAAOqC,YAAYf,QAAQtC,GAAKwB,KAAK8B,SAAStD,EAAGgB,IAErD,SAASyH,EAAOzH,GACZ,OAAOQ,KAAK2H,IAAI7F,SAASmF,EAAOzH,GAEpC,QACIQ,KAAK2H,IAAIT,QACTlH,KAAK2H,IAAM3H,KAAK6G,YAEpB,QACI7G,KAAK2H,IAAIT,QAEb,mBAAmBW,EAAU,IACzB,MAAMzH,QAAeJ,KAAK2H,IAAIO,aAAaL,GAG3C,aAFM7H,KAAK2H,IAAIG,oBAAoB1H,SAC7BJ,KAAK+H,uBACJ/H,KAAK2H,IAAIK,iBAEpB,YACI,MAAMtG,EAAO,IAAIyG,kBAAkB,CAAEC,WAAYX,EAAUY,YAG3D,OAFA3G,EAAK4G,QAAUlM,GAAK4D,KAAKoH,gBAAgBxG,KAAKxE,GAC9CsF,EAAK6G,cAAgBnM,GAAK4D,KAAK4H,cAAchH,KAAKxE,GAC3CsF,EAEX,uBACI,OAAO,IAAIlF,QAAQC,IACfuD,KAAK2H,IAAIa,eAAiB,EAAGC,eAA6B,MAAbA,GAAqBhM,MAG1E,qBAAqBiM,GACjB,OAAO1I,KAAK2H,IAAIM,qBAAqB,IAAIU,sBAAsBD,O,6BCxDvE,IAAIE,EAAY,EAAQ,IAuGxB7P,EAAOD,QAzCO,SAAS+P,GAErB,IAOIC,EAPAC,EAAU,CACZC,MAAOH,GAAQ,IAAIG,MAAQ,EAAQ,IACnCC,MAAOJ,GAAQ,IAAII,MAAQ,EAAQ,KAGjCC,GAAaL,GAAQ,IAAIK,WAAa,EACtCC,GAAaN,GAAQ,IAAIM,WAAa,EAG1C,SAASC,EAAW9H,EAAM+H,GAKxB,IAJA,IAEIC,EAFAC,EAAM,GACNC,EAAQ,GAAGC,OAAOV,EAAQzH,IAGvBkI,EAAME,QAAUH,EAAIG,OAASL,GAClCC,EAAO9D,KAAKmE,SAAWH,EAAME,OAAU,EACvCH,EAAMA,EAAIE,OAAOD,EAAMI,OAAON,EAAK,IAGrC,OAAOC,EAAI1K,KAAI,SAASgL,GAEpB,MAAoB,iBAARA,GAAyBA,aAAeC,OAGzClB,EAAUtH,EAAO,IAAMuI,GAFvBA,KAcjB,OANAf,EAAW,GAAGW,OAAOL,EAAW,OAAQF,IAEpCC,IACFL,EAAWA,EAASW,OAAOL,EAAW,OAAQD,KAGzCL,I,cCzFT,IAAIiB,EAAY,CACd,QACA,SAGFhR,EAAOD,QAAU,SAAS0Q,GACxB,IACIQ,EACAC,EAFAJ,GAAOL,GAAS,IAAIK,KAAOL,EAG3BU,EAAS,GAGb,MAAkB,iBAAPL,GAAuBA,aAAeC,QAKjDD,EAAMA,EAAI9M,QAGViN,EAAWD,EAAUA,EAAUI,QAAQN,EAAIO,MAAM,EAAG,OAOpDH,GADAJ,EAAMA,EAAIO,MAAM,IACJC,MAAM,KAElBH,EAAOI,SAAWd,EAAMc,SACxBJ,EAAOK,WAAaf,EAAMe,WAEtBN,EAAMP,OAAS,IACjBG,EAAMI,EAAM,GACZA,EAAQA,EAAM,GAAGI,MAAM,KAGvBH,EAAOI,SAAWL,EAAM,GACxBC,EAAOK,YAAcf,GAAS,IAAIe,YAAcN,EAAM,IAAM,IAG9DC,EAAOL,IAAMG,EAAWH,EACxBK,EAAOM,KAAO,CAAEN,EAAOL,KAEhBK,GAtBEV,GATAA,I,4dCvBX,YAGA,aAME,WAA4BiB,GAA5B,WAA4B,KAAAA,MALX,KAAAvJ,OAAS,IAAI,EAAAwJ,WAC5B1K,KAAKyK,KAEU,KAAAhK,UAAY,IAAIkK,IAG/B3K,KAAKkB,OAAOe,WAAU,SAAA7F,GAAK,SAAKwO,eAAexO,MA6BnD,OA1BE,YAAA6F,UAAA,SACEX,EACAhG,GAEI0E,KAAKS,UAAUmG,IAAItF,GACrBtB,KAAKS,UAAU5G,IAAIyH,GAAOtC,KAAK1D,GAE/B0E,KAAKS,UAAUoK,IAAIvJ,EAAM,CAAChG,KAI9B,YAAA+F,KAAA,SAAKpH,GACH+F,KAAKkB,OAAOG,KAAKpH,IAGX,YAAA2Q,eAAR,SAAuBpJ,GACrB,IAAMf,EAAYT,KAAKS,UAAU5G,IAAI2H,EAAQF,MAE7CxC,QAAQgM,MAAMtJ,EAAQF,KAAME,GAExBf,EACFA,EAAUK,SAAQ,SAAAtC,GAAK,OAAAA,EAAEgD,MAEzB1C,QAAQC,IAAI,sBAAsByC,EAAQF,OAGhD,EApCA,GAAa,EAAAH,U,6BCNbzH,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ4R,gBAAa,EACrB,MAAMhD,EAAY,EAAQ,GAuD1B5O,EAAQ4R,WApDR,MACI,YAAYD,GACRzK,KAAKyK,IAAMA,EACXzK,KAAK+K,mBALsB,IAM3B/K,KAAKgL,uBALkB,GAMvBhL,KAAKiL,kBAPsB,IAQ3BjL,KAAKkL,kBAAoB,EACzBlL,KAAKmL,gBAAiB,EACtBnL,KAAKiC,UAAYyF,EAAUlH,UAC3BR,KAAKoL,GAAKpL,KAAKqL,OAEnB,OACI,MAAMnK,EAAS,IAAIoK,UAAUtL,KAAKyK,KAIlC,OAHAvJ,EAAOqK,UAAYnP,GAAK4D,KAAK4K,eAAexO,GAC5C8E,EAAOsK,QAAU,IAAMxL,KAAKyL,iBAC5BvK,EAAOwK,QAAU,IAAM1L,KAAKyL,iBACrBvK,EAEX,KAAKjH,GACD+F,KAAKoL,GAAG/J,KAAKsK,KAAKC,UAAU3R,IAEhC,eAAeyM,GAGX,IAAIlF,EAFJxB,KAAKiL,kBAAoBjL,KAAK+K,mBAC9B/K,KAAKkL,kBAAoB,EAEzB,IACI1J,EAAUmK,KAAKE,MAAMnF,EAAM7F,MAE/B,MAAOiL,GAEH,YADAhN,QAAQgN,MAAM,eAAgBpF,EAAM7F,MAGxCb,KAAKiC,UAAUrB,KAAKY,GAExB,iBACI,IAAIxB,KAAKmL,eAAT,CAGA,GAAInL,KAAKkL,kBAAoBlL,KAAKgL,uBAC9B,OAAOlM,QAAQgN,MAAM,2BAA2B9L,KAAKkL,8BAEzDlL,KAAKmL,gBAAiB,EACtBrM,QAAQiN,KAAK,0BAA0B/L,KAAKiL,kBAAoB,QAChEe,WAAW,KACPlN,QAAQiN,KAAK,mBACb/L,KAAKiL,mBAAqB,EAC1BjL,KAAKkL,oBACLlL,KAAKmL,gBAAiB,EACtBnL,KAAKoL,GAAKpL,KAAKqL,QAChBrL,KAAKiL","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import { UserName } from '../../shared/types';\nimport { User } from './User';\n\nconst $ = <T extends HTMLElement = HTMLElement>(selector: string) =>\n  document.querySelector(selector) as T;\n\nconst userList = $('#userlist');\nlet onUserClicked: Function;\n\nexport function whenUserClicked(listener: Function) {\n  onUserClicked = listener;\n}\n\nexport function getCanvas() {\n  const canvas = $<HTMLCanvasElement>('canvas');\n  const parent = canvas.parentElement!;\n\n  window.addEventListener('resize', fill);\n  fill();\n\n  return canvas;\n\n  function fill() {\n    canvas.width = parent.clientWidth;\n    canvas.height = parent.clientHeight;\n  }\n}\n\nexport async function getUserName() {\n  const key = 'amongus:username';\n  const stored = sessionStorage.getItem(key);\n\n  $('#logout')!.addEventListener('click', e => {\n    sessionStorage.removeItem(key);\n    location.reload();\n  });\n\n  if (stored) {\n    return Promise.resolve(stored as UserName);\n  }\n\n  const $dialog = $<HTMLDialogElement>('#login');\n  const $form = $dialog.querySelector('form') as HTMLFormElement;\n  const $input = $form?.querySelector('input[type=text]') as HTMLInputElement;\n\n  $dialog.showModal();\n\n  return new Promise<UserName>((resolve, reject) => {\n    $form.addEventListener('submit', e => {\n      const value = $input.value.trim();\n      sessionStorage.setItem(key, value);\n      resolve(value as UserName);\n    });\n  });\n}\n\nexport function renderUsername(name: string) {\n  const parent = $('#username');\n  parent.innerHTML = name;\n}\n\nexport function confirm(question: string) {\n  const $template = $<HTMLTemplateElement>('#confirm-dialog');\n  const $dialog = document.importNode($template.content, true)\n    .firstElementChild as HTMLDialogElement;\n\n  document.body.appendChild($dialog);\n\n  const get = (selector: string) => $dialog.querySelector(selector)!;\n  get('.question')!.innerHTML = question;\n\n  return new Promise(resolve => {\n    get('.yes')!.addEventListener('click', () => resolve(true));\n    get('.no')!.addEventListener('click', () => resolve(false));\n    $dialog.showModal();\n  }).then(result => {\n    $dialog.remove();\n    return result;\n  });\n}\n\nexport function renderUsers(users: User[]) {\n  userList.innerHTML = '';\n\n  for (const user of users) {\n    const el = document.createElement('div');\n\n    const buttonClick = async () => {\n      await onUserClicked(user);\n      renderUsers(users);\n    };\n\n    const suffix = user.isCalling ? '(llamando...)' : '';\n\n    const button = document.createElement('button');\n    button.innerHTML = `${user.name} ${suffix}`;\n    button.onclick = buttonClick;\n    el.appendChild(button);\n\n    userList.appendChild(el);\n  }\n}\n","import { SerializedUser } from '../../shared/SerializedUser';\nimport { renderUsers } from './ui';\nimport { UserId, UserName } from '../../shared/types';\nimport { User } from './User';\n\nlet users: User[] = [];\n\nexport function getUserById(id: UserId) {\n  return users.find(x => x.id === id);\n}\n\nexport function getUserByName(name: UserName) {\n  return users.find(x => x.name === name);\n}\n\nexport function setUserList(list: SerializedUser[]) {\n  users = list.map(unserializeUser).map(x => getUserById(x.id) || x);\n  refreshUserList();\n}\n\nfunction unserializeUser(user: SerializedUser) {\n  return new User(user);\n}\n\nexport function userConnected(user: SerializedUser) {\n  console.log('CONNECTED', user);\n  users.push(unserializeUser(user));\n  refreshUserList();\n}\n\nexport function userDisconnected(user: SerializedUser) {\n  console.log('DISCONNECTED', user);\n  users = users.filter(x => x.id !== user.id);\n  refreshUserList();\n}\n\nexport function getUserList() {\n  return users;\n}\n\nexport function refreshUserList() {\n  renderUsers(users);\n}\n","import { RoomMessage } from './RoomMessage';\nimport { UserId, UserName } from '../types';\nimport { ClientToClientMessage } from './ClientToClientMessage';\n\nexport enum ClientMessageType {\n  ERROR = 'ERROR',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  SEND_TO_USER = 'SEND_TO_USER',\n  SEND_TO_ROOM = 'SEND_TO_ROOM',\n}\n\ninterface ClientMessage__ERROR {\n  type: ClientMessageType.ERROR;\n  message: string;\n}\n\ninterface ClientMessage__LOGIN {\n  type: ClientMessageType.LOGIN;\n  name: UserName;\n}\n\ninterface ClientMessage__LOGOUT {\n  type: ClientMessageType.LOGOUT;\n}\n\ninterface ClientMessage__SEND_TO_ROOM {\n  type: ClientMessageType.SEND_TO_ROOM;\n  message: RoomMessage;\n}\n\ninterface ClientMessage__SEND_TO_USER {\n  type: ClientMessageType.SEND_TO_USER;\n  to: UserId;\n  message: ClientToClientMessage;\n}\n\nexport type ClientMessage =\n  | ClientMessage__ERROR\n  | ClientMessage__LOGIN\n  | ClientMessage__LOGOUT\n  | ClientMessage__SEND_TO_ROOM\n  | ClientMessage__SEND_TO_USER;\n","export enum ClientToClientMessageType {\n  RPC_OFFER = 'SEND_OFFER',\n  RPC_ANSWER = 'SEND_ANSWER',\n  REJECT_OFFER = 'REJECT_OFFER',\n}\n\ninterface ClientToClientMessage__RPC_OFFER {\n  type: ClientToClientMessageType.RPC_OFFER;\n  offer: RTCSessionDescription;\n}\n\ninterface ClientToClientMessage__RPC_ANSWER {\n  type: ClientToClientMessageType.RPC_ANSWER;\n  answer: RTCSessionDescription;\n}\n\ninterface ClientToClientMessage__REJECT_OFFER {\n  type: ClientToClientMessageType.REJECT_OFFER;\n}\n\nexport type ClientToClientMessage =\n  | ClientToClientMessage__RPC_OFFER\n  | ClientToClientMessage__RPC_ANSWER\n  | ClientToClientMessage__REJECT_OFFER;\n","export function captureAudio() {\n  return navigator.mediaDevices.getUserMedia({ audio: true });\n}\n\nexport async function playAudio(stream: MediaStream) {\n  const audio = prepareAudio(stream);\n  await audio.play();\n}\n\nfunction prepareAudio(stream: MediaStream) {\n  const audio = document.createElement('audio');\n  audio.srcObject = stream;\n  document.body.appendChild(audio);\n  return audio;\n}\n","import { SerializedUser } from '../../shared/SerializedUser';\nimport { PeerChannel } from './PeerChannel';\n\nexport class User implements SerializedUser {\n  id;\n  name;\n  position = { x: 0, y: 0 };\n\n  private connection: PeerChannel | null = null;\n\n  get isCalling() {\n    return Boolean(this.connection);\n  }\n\n  constructor(serialized: SerializedUser) {\n    this.id = serialized.id;\n    this.name = serialized.name;\n  }\n\n  callStarted(connection: PeerChannel) {\n    this.connection = connection;\n  }\n\n  acceptAnswer(answer: RTCSessionDescription): void {\n    this.connection!.acceptAnswer(answer);\n  }\n\n  hangup() {\n    this.connection?.end();\n    this.connection = null;\n  }\n\n  dispose() {\n    this.hangup();\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.emitter = void 0;\nfunction emitter() {\n    const listeners = new Set();\n    subscribe.emit = emit;\n    return subscribe;\n    function emit(data) {\n        listeners.forEach(listener => listener(data));\n    }\n    function subscribe(listener) {\n        listeners.add(listener);\n        return () => listeners.delete(listener);\n    }\n}\nexports.emitter = emitter;\n//# sourceMappingURL=emitter.js.map","import {\n  RoomMessage,\n  RoomMessageType,\n} from './../../shared/communication/RoomMessage';\nimport { ClientMessageType } from '../../shared/communication/ClientMessage';\nimport { ClientToClientMessageType } from '../../shared/communication/ClientToClientMessage';\nimport {\n  ServerMessage,\n  ServerMessageType,\n} from '../../shared/communication/ServerMessage';\nimport { UserName, UserId } from '../../shared/types';\nimport { captureAudio } from './audio';\nimport { runFrame } from './game';\nimport { PeerChannel } from './PeerChannel';\nimport { Socket } from './Socket';\nimport { getUserName, renderUsername, whenUserClicked } from './ui';\nimport { User } from './User';\nimport {\n  getUserById,\n  setUserList,\n  userConnected,\n  userDisconnected,\n} from './users';\nimport { Vector } from '../../shared/Vector';\n\nconst t = ServerMessageType;\nconst socket = new Socket('wss://amongus.amatiasq.com');\n\nwhenUserClicked(toggleCall);\n\nsocket.onMessage(t.HANDSHAKE, login);\nsocket.onMessage(t.LOGIN_RESULT, data => handleLoginResult(data));\nsocket.onMessage(t.USER_CONNECTED, data => userConnected(data.user));\nsocket.onMessage(t.USER_DISCONNECTED, data => userDisconnected(data.user));\n\nsocket.onMessage(t.MESSAGE_TO_ROOM, ({ from, message }) => {\n  const user = getValidUser(from);\n  if (!user) return;\n\n  switch (message.type) {\n    case RoomMessageType.POSITION_CHANGED:\n      return updatePosition(user, message.position);\n  }\n});\n\nsocket.onMessage(t.MESSAGE_FROM_USER, ({ from, message }) => {\n  const user = getValidUser(from);\n  if (!user) return;\n\n  switch (message.type) {\n    case ClientToClientMessageType.RPC_OFFER:\n      return receiveOffer(user, message.offer);\n    case ClientToClientMessageType.RPC_ANSWER:\n      return user.acceptAnswer(message.answer);\n    case ClientToClientMessageType.REJECT_OFFER:\n      return user.hangup();\n  }\n});\n\nasync function login() {\n  const name = await getUserName();\n  renderUsername(name);\n  socket.send({ type: ClientMessageType.LOGIN, name });\n}\n\nfunction handleLoginResult(data: ServerMessage) {\n  if (data.type !== ServerMessageType.LOGIN_RESULT) {\n    return;\n  }\n\n  if (!data.success) {\n    alert(data.message);\n    sessionStorage.clear();\n    location.reload();\n    return;\n  }\n\n  setUserList(data.users);\n  startGame(data.name);\n}\n\nfunction startGame(name: UserName) {\n  const me = new User({ id: 'me' as UserId, name });\n\n  frame();\n\n  function frame() {\n    const before = { ...me.position };\n    runFrame(me);\n\n    if (before.x !== me.position.x || before.y !== me.position.y) {\n      socket.send({\n        type: ClientMessageType.SEND_TO_ROOM,\n        message: {\n          type: RoomMessageType.POSITION_CHANGED,\n          position: me.position,\n        },\n      });\n    }\n\n    requestAnimationFrame(frame);\n  }\n}\n\nfunction updatePosition(user: User, position: Vector) {\n  user.position = position;\n}\n\nfunction toggleCall(user: User) {\n  return user.isCalling ? user.hangup() : callUser(user);\n}\n\nasync function callUser(user: User) {\n  const conn = new PeerChannel(user, m => socket.send(m));\n  const stream = await captureAudio();\n\n  stream.getTracks().forEach(x => conn.addTrack(x, stream));\n  conn.sendOffer();\n\n  user.callStarted(conn);\n  return conn;\n}\n\nasync function receiveOffer(user: User, offer: RTCSessionDescription) {\n  console.log(`${user.name} quiere iniciar una llamada`);\n  const shouldAnswer = await confirm(\n    `${user.name} quiere iniciar una llamada.<br>Contestar?`,\n  );\n\n  if (!shouldAnswer) {\n    console.log(`Llamada de ${user.name} rechazada`);\n    socket.send({\n      type: ClientMessageType.SEND_TO_USER,\n      to: user.id,\n      message: { type: ClientToClientMessageType.REJECT_OFFER },\n    });\n    return;\n  }\n\n  console.log(`Llamada de ${user.name} aceptada`);\n  const conn = new PeerChannel(user, m => socket.send(m));\n\n  conn.acceptOffer(offer);\n  console.log(`Enviando respuesta a ${user.name}...`);\n\n  user.callStarted(conn);\n  return conn;\n}\n\nfunction getValidUser(id: UserId) {\n  const user = getUserById(id);\n\n  if (user) {\n    return user;\n  }\n\n  socket.send({\n    type: ClientMessageType.ERROR,\n    message: `Received message from unknown user ${id}`,\n  });\n}\n","import { Vector } from './../Vector';\n\nexport enum RoomMessageType {\n  POSITION_CHANGED = 'POSITION_CHANGED',\n}\n\ninterface RoomMessage__POSITION_CHANGED {\n  type: RoomMessageType.POSITION_CHANGED;\n  position: Vector;\n}\n\nexport type RoomMessage = RoomMessage__POSITION_CHANGED;\n","import { RoomMessage } from './RoomMessage';\nimport { SerializedUser } from '../SerializedUser';\nimport { UserId, UserName } from '../types';\nimport { ClientToClientMessage } from './ClientToClientMessage';\n\nexport enum ServerMessageType {\n  ERROR = 'ERROR',\n  HANDSHAKE = 'HANDSHAKE',\n  LOGIN_RESULT = 'LOGIN_RESULT',\n  USER_CONNECTED = 'USER_CONNECTED',\n  USER_DISCONNECTED = 'USER_DISCONNECTED',\n  MESSAGE_FROM_USER = 'MESSAGE_FROM_USER',\n  MESSAGE_TO_ROOM = 'MESSAGE_TO_ROOM',\n}\n\ninterface ServerMessage__ERROR {\n  type: ServerMessageType.ERROR;\n  message: string;\n}\n\ninterface ServerMessage__HANDSHAKE {\n  type: ServerMessageType.HANDSHAKE;\n}\n\ninterface ServerMessage__LOGIN_RESULT__SUCCESS {\n  type: ServerMessageType.LOGIN_RESULT;\n  success: true;\n  name: UserName;\n  users: SerializedUser[];\n}\n\ninterface ServerMessage__LOGIN_RESULT__FAIL {\n  type: ServerMessageType.LOGIN_RESULT;\n  success: false;\n  message: string;\n}\n\ninterface ServerMessage__USER_CONNECTED {\n  type: ServerMessageType.USER_CONNECTED;\n  user: SerializedUser;\n}\n\ninterface ServerMessage__USER_DISCONNECTED {\n  type: ServerMessageType.USER_DISCONNECTED;\n  user: SerializedUser;\n}\n\ninterface ServerMessage__MESSAGE_TO_ROOM {\n  type: ServerMessageType.MESSAGE_TO_ROOM;\n  from: UserId;\n  message: RoomMessage;\n}\n\ninterface ServerMessage__MESSAGE_FROM_USER {\n  type: ServerMessageType.MESSAGE_FROM_USER;\n  from: UserId;\n  message: ClientToClientMessage;\n}\n\nexport type ServerMessage =\n  | ServerMessage__ERROR\n  | ServerMessage__HANDSHAKE\n  | ServerMessage__LOGIN_RESULT__SUCCESS\n  | ServerMessage__LOGIN_RESULT__FAIL\n  | ServerMessage__USER_CONNECTED\n  | ServerMessage__USER_DISCONNECTED\n  | ServerMessage__MESSAGE_TO_ROOM\n  | ServerMessage__MESSAGE_FROM_USER;\n","import { Vector } from '../../shared/Vector';\nimport { render } from './canvas';\nimport { isPressed, Action } from './interaction';\nimport { User } from './User';\nimport { getUserList } from './users';\n\nconst SPEED = 5;\n\nexport function runFrame(user: User) {\n  movePlayer(user.position);\n  const others = getUserList().map(x => x.position);\n  render(user.position, others);\n}\n\nfunction movePlayer(position: Vector) {\n  if (isPressed(Action.UP)) position.y -= SPEED;\n  if (isPressed(Action.DOWN)) position.y += SPEED;\n  if (isPressed(Action.LEFT)) position.x -= SPEED;\n  if (isPressed(Action.RIGHT)) position.x += SPEED;\n}\n","import { Vector } from '../../shared/Vector';\nimport { getCanvas } from './ui';\n\nconst canvas = getCanvas();\nconst context = canvas.getContext('2d')!;\n\nexport function render(user: Vector, others: Vector[]) {\n  context.fillRect(0, 0, canvas.width, canvas.height);\n\n  context.save();\n  context.translate(canvas.width / 2, canvas.height / 2);\n  others.forEach(user => drawCircle(user.x, user.y, '#FF8888'));\n  drawCircle(user.x, user.y, '#88ff88');\n  context.restore();\n}\n\nfunction drawCircle(x: number, y: number, color: string) {\n  context.fillStyle = color;\n  context.beginPath();\n  context.arc(x, y, 15, 0, Math.PI * 2);\n  context.fill();\n  context.closePath();\n}\n","export enum Action {\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n}\n\nenum KeyboardKey {\n  W = 'w',\n  S = 's',\n  A = 'a',\n  D = 'd',\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n  ARROW_LEFT = 'ArrowLeft',\n  ARROW_RIGHT = 'ArrowRight',\n}\n\nconst keymap = {\n  [KeyboardKey.W]: Action.UP,\n  [KeyboardKey.S]: Action.DOWN,\n  [KeyboardKey.A]: Action.LEFT,\n  [KeyboardKey.D]: Action.RIGHT,\n  [KeyboardKey.ARROW_UP]: Action.UP,\n  [KeyboardKey.ARROW_DOWN]: Action.DOWN,\n  [KeyboardKey.ARROW_LEFT]: Action.LEFT,\n  [KeyboardKey.ARROW_RIGHT]: Action.RIGHT,\n};\n\nconst actions = new Set<Action>();\n\ndocument.addEventListener('keydown', onKeyDown);\ndocument.addEventListener('keyup', onKeyUp);\n\nfunction onKeyDown(event: KeyboardEvent) {\n  const key = event.key as KeyboardKey;\n  const action = keymap[key];\n\n  if (action == null) {\n    console.log('KeyDown', key, keymap[key]);\n  } else {\n    actions.add(action);\n  }\n}\n\nfunction onKeyUp(event: KeyboardEvent) {\n  const key = event.key as KeyboardKey;\n  const action = keymap[key];\n\n  if (action == null) {\n    console.log('KeyUp', key);\n  } else {\n    actions.delete(action);\n  }\n}\n\nexport function isPressed(key: Action) {\n  return actions.has(key);\n}\n","import { PeerConnection } from '@amatiasq/peer-connection';\n\nimport {\n  ClientMessage,\n  ClientMessageType,\n} from '../../shared/communication/ClientMessage';\nimport { ClientToClientMessageType } from '../../shared/communication/ClientToClientMessage';\nimport { captureAudio, playAudio } from './audio';\nimport { User } from './User';\nimport { refreshUserList } from './users';\n\nexport class PeerChannel {\n  private readonly conn = this.createRtc();\n\n  constructor(\n    public readonly user: User,\n    private readonly send: (message: ClientMessage) => void,\n  ) {}\n\n  async sendOffer() {\n    // this.createDataChannel();\n    const offer = await this.conn.createOffer({ offerToReceiveAudio: true });\n\n    await this.send({\n      type: ClientMessageType.SEND_TO_USER,\n      to: this.user.id,\n      message: {\n        type: ClientToClientMessageType.RPC_OFFER,\n        offer,\n      },\n    });\n  }\n\n  async acceptOffer(offer: RTCSessionDescription) {\n    const stream = await captureAudio();\n    this.conn.addStream(stream);\n\n    const answer = await this.conn.acceptOffer(offer, {\n      offerToReceiveAudio: true,\n    });\n\n    await this.send({\n      type: ClientMessageType.SEND_TO_USER,\n      to: this.user.id,\n      message: {\n        type: ClientToClientMessageType.RPC_ANSWER,\n        answer,\n      },\n    });\n  }\n\n  acceptAnswer(answer: RTCSessionDescription) {\n    return this.conn.acceptAnswer(answer);\n  }\n\n  addTrack(track: MediaStreamTrack, stream: MediaStream) {\n    console.log(`Enviando audio a ${this.user.name}.`);\n    return this.conn.addTrack(track, stream);\n  }\n\n  end() {\n    this.conn.close();\n  }\n\n  private createRtc() {\n    const conn = new PeerConnection();\n\n    conn.onTrackReceived(e => {\n      console.log(`Recibiendo audio de ${this.user.name}.`);\n      playAudio(e.streams[0]);\n      refreshUserList();\n    });\n\n    return conn;\n  }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PeerConnection = void 0;\n/// <reference path=\"./freeice.d.ts\" />\nconst freeice_1 = __importDefault(require(\"freeice\"));\nconst emitter_1 = require(\"@amatiasq/emitter\");\nclass PeerConnection {\n    constructor() {\n        this.rtc = this.createRtc();\n        this.onTrackReceived = emitter_1.emitter();\n        this.onDataChannel = emitter_1.emitter();\n    }\n    async createOffer(options = {}) {\n        const offer = await this.rtc.createOffer(options);\n        await this.rtc.setLocalDescription(offer);\n        await this.processIceCandidates();\n        return this.rtc.localDescription;\n    }\n    async acceptOffer(offer, options = {}) {\n        await this.setRemoteDescription(offer);\n        return this.createAnswer(options);\n    }\n    acceptAnswer(answer) {\n        return this.setRemoteDescription(answer);\n    }\n    addStream(stream) {\n        stream.getTracks().forEach(x => this.addTrack(x, stream));\n    }\n    addTrack(track, stream) {\n        return this.rtc.addTrack(track, stream);\n    }\n    reset() {\n        this.rtc.close();\n        this.rtc = this.createRtc();\n    }\n    close() {\n        this.rtc.close();\n    }\n    async createAnswer(options = {}) {\n        const answer = await this.rtc.createAnswer(options);\n        await this.rtc.setLocalDescription(answer);\n        await this.processIceCandidates();\n        return this.rtc.localDescription;\n    }\n    createRtc() {\n        const conn = new RTCPeerConnection({ iceServers: freeice_1.default() });\n        conn.ontrack = e => this.onTrackReceived.emit(e);\n        conn.ondatachannel = e => this.onDataChannel.emit(e);\n        return conn;\n    }\n    processIceCandidates() {\n        return new Promise(resolve => {\n            this.rtc.onicecandidate = ({ candidate }) => candidate == null && resolve();\n        });\n    }\n    setRemoteDescription(desc) {\n        return this.rtc.setRemoteDescription(new RTCSessionDescription(desc));\n    }\n}\nexports.PeerConnection = PeerConnection;\n//# sourceMappingURL=PeerConnection.js.map","/* jshint node: true */\n'use strict';\n\nvar normalice = require('normalice');\n\n/**\n  # freeice\n\n  The `freeice` module is a simple way of getting random STUN or TURN server\n  for your WebRTC application.  The list of servers (just STUN at this stage)\n  were sourced from this [gist](https://gist.github.com/zziuni/3741933).\n\n  ## Example Use\n\n  The following demonstrates how you can use `freeice` with\n  [rtc-quickconnect](https://github.com/rtc-io/rtc-quickconnect):\n\n  <<< examples/quickconnect.js\n\n  As the `freeice` module generates ice servers in a list compliant with the\n  WebRTC spec you will be able to use it with raw `RTCPeerConnection`\n  constructors and other WebRTC libraries.\n\n  ## Hey, don't use my STUN/TURN server!\n\n  If for some reason your free STUN or TURN server ends up in the\n  list of servers ([stun](https://github.com/DamonOehlman/freeice/blob/master/stun.json) or\n  [turn](https://github.com/DamonOehlman/freeice/blob/master/turn.json))\n  that is used in this module, you can feel\n  free to open an issue on this repository and those servers will be removed\n  within 24 hours (or sooner).  This is the quickest and probably the most\n  polite way to have something removed (and provides us some visibility\n  if someone opens a pull request requesting that a server is added).\n\n  ## Please add my server!\n\n  If you have a server that you wish to add to the list, that's awesome! I'm\n  sure I speak on behalf of a whole pile of WebRTC developers who say thanks.\n  To get it into the list, feel free to either open a pull request or if you\n  find that process a bit daunting then just create an issue requesting\n  the addition of the server (make sure you provide all the details, and if\n  you have a Terms of Service then including that in the PR/issue would be\n  awesome).\n\n  ## I know of a free server, can I add it?\n\n  Sure, if you do your homework and make sure it is ok to use (I'm currently\n  in the process of reviewing the terms of those STUN servers included from\n  the original list).  If it's ok to go, then please see the previous entry\n  for how to add it.\n\n  ## Current List of Servers\n\n  * current as at the time of last `README.md` file generation\n\n  ### STUN\n\n  <<< stun.json\n\n  ### TURN\n\n  <<< turn.json\n\n**/\n\nvar freeice = function(opts) {\n  // if a list of servers has been provided, then use it instead of defaults\n  var servers = {\n    stun: (opts || {}).stun || require('./stun.json'),\n    turn: (opts || {}).turn || require('./turn.json')\n  };\n\n  var stunCount = (opts || {}).stunCount || 2;\n  var turnCount = (opts || {}).turnCount || 0;\n  var selected;\n\n  function getServers(type, count) {\n    var out = [];\n    var input = [].concat(servers[type]);\n    var idx;\n\n    while (input.length && out.length < count) {\n      idx = (Math.random() * input.length) | 0;\n      out = out.concat(input.splice(idx, 1));\n    }\n\n    return out.map(function(url) {\n        //If it's a not a string, don't try to \"normalice\" it otherwise using type:url will screw it up\n        if ((typeof url !== 'string') && (! (url instanceof String))) {\n            return url;\n        } else {\n            return normalice(type + ':' + url);\n        }\n    });\n  }\n\n  // add stun servers\n  selected = [].concat(getServers('stun', stunCount));\n\n  if (turnCount) {\n    selected = selected.concat(getServers('turn', turnCount));\n  }\n\n  return selected;\n};\n\nmodule.exports = freeice;","/**\n  # normalice\n\n  Normalize an ice server configuration object (or plain old string) into a format\n  that is usable in all browsers supporting WebRTC.  Primarily this module is designed\n  to help with the transition of the `url` attribute of the configuration object to\n  the `urls` attribute.\n\n  ## Example Usage\n\n  <<< examples/simple.js\n\n**/\n\nvar protocols = [\n  'stun:',\n  'turn:'\n];\n\nmodule.exports = function(input) {\n  var url = (input || {}).url || input;\n  var protocol;\n  var parts;\n  var output = {};\n\n  // if we don't have a string url, then allow the input to passthrough\n  if (typeof url != 'string' && (! (url instanceof String))) {\n    return input;\n  }\n\n  // trim the url string, and convert to an array\n  url = url.trim();\n\n  // if the protocol is not known, then passthrough\n  protocol = protocols[protocols.indexOf(url.slice(0, 5))];\n  if (! protocol) {\n    return input;\n  }\n\n  // now let's attack the remaining url parts\n  url = url.slice(5);\n  parts = url.split('@');\n\n  output.username = input.username;\n  output.credential = input.credential;\n  // if we have an authentication part, then set the credentials\n  if (parts.length > 1) {\n    url = parts[1];\n    parts = parts[0].split(':');\n\n    // add the output credential and username\n    output.username = parts[0];\n    output.credential = (input || {}).credential || parts[1] || '';\n  }\n\n  output.url = protocol + url;\n  output.urls = [ output.url ];\n\n  return output;\n};\n","import {\n  ServerMessage,\n  ServerMessageType,\n} from './../../shared/communication/ServerMessage';\nimport { JsonSocket } from '@amatiasq/json-socket';\nimport { ClientMessage } from '../../shared/communication/ClientMessage';\n\nexport class Socket {\n  private readonly socket = new JsonSocket<ServerMessage, ClientMessage>(\n    this.uri,\n  );\n  private readonly listeners = new Map<ServerMessageType, Listener[]>();\n\n  constructor(public readonly uri: string) {\n    this.socket.onMessage(e => this.processMessage(e));\n  }\n\n  onMessage<T extends ServerMessageType>(\n    type: T,\n    listener: (message: TypedMessage<T>) => void,\n  ) {\n    if (this.listeners.has(type)) {\n      this.listeners.get(type)!.push(listener as any);\n    } else {\n      this.listeners.set(type, [listener as any]);\n    }\n  }\n\n  send(value: ClientMessage) {\n    this.socket.send(value);\n  }\n\n  private processMessage(message: ServerMessage): void {\n    const listeners = this.listeners.get(message.type);\n\n    console.debug(message.type, message);\n\n    if (listeners) {\n      listeners.forEach(x => x(message));\n    } else {\n      console.log(`Unhandled message: ${message.type}`);\n    }\n  }\n}\n\ntype Listener = (message: ServerMessage) => void;\n\ntype TypedMessage<T extends ServerMessageType> = Extract<\n  ServerMessage,\n  { type: T }\n>;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonSocket = void 0;\nconst emitter_1 = require(\"@amatiasq/emitter\");\nconst DEFAULT_RECONNECTION_DELAY = 100;\nconst MAX_RECONNECT_ATTEMPTS = 14;\nclass JsonSocket {\n    constructor(uri) {\n        this.uri = uri;\n        this.RECONNECTION_DELAY = DEFAULT_RECONNECTION_DELAY;\n        this.MAX_RECONNECT_ATTEMPTS = MAX_RECONNECT_ATTEMPTS;\n        this.reconnectionDelay = DEFAULT_RECONNECTION_DELAY;\n        this.reconnectAttempts = 0;\n        this.isReconnecting = false;\n        this.onMessage = emitter_1.emitter();\n        this.ws = this.init();\n    }\n    init() {\n        const socket = new WebSocket(this.uri);\n        socket.onmessage = e => this.processMessage(e);\n        socket.onerror = () => this.connectionLost();\n        socket.onclose = () => this.connectionLost();\n        return socket;\n    }\n    send(value) {\n        this.ws.send(JSON.stringify(value));\n    }\n    processMessage(event) {\n        this.reconnectionDelay = this.RECONNECTION_DELAY;\n        this.reconnectAttempts = 0;\n        let message;\n        try {\n            message = JSON.parse(event.data);\n        }\n        catch (error) {\n            console.error('Invalid JSON', event.data);\n            return;\n        }\n        this.onMessage.emit(message);\n    }\n    connectionLost() {\n        if (this.isReconnecting) {\n            return;\n        }\n        if (this.reconnectAttempts > this.MAX_RECONNECT_ATTEMPTS) {\n            return console.error(`Websocket aborted after ${this.reconnectAttempts} attempts`);\n        }\n        this.isReconnecting = true;\n        console.warn(`Socket closed. Waiting ${this.reconnectionDelay / 1000}s`);\n        setTimeout(() => {\n            console.warn('Reconnecting...');\n            this.reconnectionDelay *= 2;\n            this.reconnectAttempts++;\n            this.isReconnecting = false;\n            this.ws = this.init();\n        }, this.reconnectionDelay);\n    }\n}\nexports.JsonSocket = JsonSocket;\n//# sourceMappingURL=JsonSocket.js.map"],"sourceRoot":""}